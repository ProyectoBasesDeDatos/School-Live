/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import BaseDatos.ConexionBase;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bryan Adams
 */
public class EditPerfProf extends javax.swing.JInternalFrame {

    /**
     * Creates new form EditPerfProf
     */
    public EditPerfProf() {
        initComponents();
        ConexionBase base = new ConexionBase();

        if (base.getConexionCorrecta() != -1) {
            String[][] profesores = base.getDatosConsulta("select idpersona, concat(nombre1,' ',apellido1,' ',apellido2) from persona where tipoperfil='P'");

            DefaultListModel model = new DefaultListModel();
            for (int i = 0; i < profesores.length; i++) {
                model.addElement(profesores[i][0] + "-" + profesores[i][1]);
            }
            listaProfesores.setModel(model);
        } else {
            System.err.println("No se ha logrado establecer conexión con la base de datos");
        }

        listaProvincias.removeAllItems();
        listaCantones.removeAllItems();
        if (base.getConexionCorrecta() != -1) {
            String[][] valoresProvincias = base.getDatosConsulta("select * from provincia");
            String[][] valoresCantones = base.getDatosConsulta("select idcanton, descripcion from canton");

            for (int i = 0; i < valoresProvincias.length; i++) {
                listaProvincias.addItem(valoresProvincias[i][0] + "-" + valoresProvincias[i][1]);
            }
            for (int j = 0; j < valoresCantones.length; j++) {
                listaCantones.addItem(valoresCantones[j][0] + "-" + valoresCantones[j][1]);
            }

        } else {
            System.err.println("No se ha logrado establecer conexión con la base de datos");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tipoDireccion = new javax.swing.JComboBox();
        listaProvincias = new javax.swing.JComboBox();
        listaCantones = new javax.swing.JComboBox();
        tiposTelefono = new javax.swing.JComboBox();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fb = new javax.swing.JTextField();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel11 = new javax.swing.JLabel();
        jToggleButton2 = new javax.swing.JToggleButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaMateriasAsignadas = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        listaMateriasDisponibles = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        id = new javax.swing.JTextField();
        apellido1 = new javax.swing.JTextField();
        nombre1 = new javax.swing.JTextField();
        apellido2 = new javax.swing.JTextField();
        sexo = new javax.swing.JComboBox();
        email = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        pwd = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablaDirecciones = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tablaTelefonos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaProfesores = new javax.swing.JList();
        EBusqueda = new javax.swing.JTextField();
        BBuscar = new javax.swing.JButton();
        CBBusqueda = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();

        tipoDireccion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Habitacion", "Oficina", "Otro" }));

        listaProvincias.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        listaCantones.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tiposTelefono.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Casa", "Oficina", "Movil", "Otro" }));

        setClosable(true);
        setIconifiable(true);
        setTitle("Editar Perfil Profesor");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/boss.png"))); // NOI18N

        jSplitPane1.setDividerLocation(200);

        jLabel5.setText("Identificación");

        jLabel2.setText("Primer Apellido");

        jToggleButton1.setText(">");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Materias");

        jToggleButton2.setText("<");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Sexo");

        jScrollPane3.setViewportView(listaMateriasAsignadas);

        jScrollPane4.setViewportView(listaMateriasDisponibles);

        jLabel1.setText("Nombre");

        jLabel3.setText("Segundo Apellido");

        jLabel9.setText("E mail");

        jLabel10.setText("Facebook");

        jLabel6.setText("Fecha de Nacimiento");

        jLabel7.setText("Dirección");

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        id.setToolTipText("");

        sexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M", "F" }));

        jLabel12.setText("Contraseña");

        tablaDirecciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tipo", "Provincia", "Canton", "Direccion Exacta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaDirecciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaDireccionesMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tablaDirecciones);

        jLabel14.setText("Telefonos");

        tablaTelefonos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tipo", "Numero"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaTelefonos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaTelefonosMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tablaTelefonos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(244, 531, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(id, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                            .addComponent(apellido1))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel3)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                            .addComponent(sexo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel10)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel12)
                                                .addGap(52, 52, 52)
                                                .addComponent(pwd, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton1)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jToggleButton1)
                                        .addComponent(jToggleButton2))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel11))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel5))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 314, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(apellido2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                .addComponent(email, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(fb, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(nombre1))))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(apellido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(pwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel14)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jToggleButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(nombre1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel5)))
                    .addGap(14, 14, 14)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(apellido2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(fb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(610, Short.MAX_VALUE)))
        );

        jSplitPane1.setRightComponent(jPanel1);

        listaProfesores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaProfesoresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaProfesores);

        BBuscar.setText("Buscar");
        BBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BBuscarActionPerformed(evt);
            }
        });

        CBBusqueda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Id", "Nombre", "Apellido", "Materia" }));

        jLabel13.setText("Buscar por");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 194, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(EBusqueda)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(BBuscar))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CBBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(14, 14, 14)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 751, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(CBBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(14, 14, 14)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BBuscar)
                        .addComponent(EBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane1)
                    .addContainerGap()))
        );

        jSplitPane1.setLeftComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    DefaultListModel dlm = new DefaultListModel();
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed

        dlm.addElement(listaMateriasDisponibles.getSelectedValue());
        listaMateriasAsignadas.setModel(dlm);

    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        DefaultListModel model = (DefaultListModel) listaMateriasAsignadas.getModel();
        int selectedIndex = listaMateriasAsignadas.getSelectedIndex();
        if (selectedIndex != -1) {
            model.remove(selectedIndex);
        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void BBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BBuscarActionPerformed
        ConexionBase base = new ConexionBase();
        if (base.getConexionCorrecta() != -1) {
            String[][]profesores;
            String opcion = String.valueOf(CBBusqueda.getSelectedItem());
            if (opcion.equals("Id")) {
                profesores = base.getDatosConsulta("select idpersona, concat(nombre1,' ',apellido1,' ',apellido2) from persona where tipoperfil='P' and idpersona='" + EBusqueda.getText() + "';");
            } else if (opcion.equals("Nombre")) {
                profesores = base.getDatosConsulta("select idpersona, concat(nombre1,' ',apellido1,' ',apellido2) from persona where tipoperfil='P' and nombre1='" + EBusqueda.getText() + "';");
            } else if (opcion.equals("Apellido")) {
                profesores = base.getDatosConsulta("select idpersona, concat(nombre1,' ',apellido1,' ',apellido2) from persona where tipoperfil='P' and apellido1='" + EBusqueda.getText() + "';");
            } else{
                profesores = base.getDatosConsulta("select p.idpersona, concat(p.nombre1,' ',p.apellido1,' ',p.apellido2) from persona p, profesores pr, materias m where p.idpersona=pr.idpersona and pr.idmateriaasignada= m.idmateria and m.nombremateria=upper('" + EBusqueda.getText() + "');");
            }
            DefaultListModel model = new DefaultListModel();
            for (int i = 0; i < profesores.length; i++) {
                model.addElement(profesores[i][0] + "-" + profesores[i][1]);
            }
            listaProfesores.setModel(model);

        } else {
            System.err.println("No se ha logrado establecer conexión con la base de datos");
        }
        
    }//GEN-LAST:event_BBuscarActionPerformed

    private void listaProfesoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaProfesoresMouseClicked
   id.enableInputMethods(false);
        ConexionBase base = new ConexionBase();
        String[][] infoGeneral = null;
        String[][] direcciones = null;
        String[][] telefonos = null;
        String[][] materiasDisponibles=null;
        String [][] materiasAsignadas=null;
        if (base.getConexionCorrecta() != -1) {
            String idProf = String.valueOf(listaProfesores.getSelectedValue());
            idProf = idProf.substring(0, idProf.indexOf("-"));
            infoGeneral = base.getDatosConsulta("select * from persona where idpersona='" + idProf + "';");
            direcciones = base.getDatosConsulta("select tipo,idprovincia,idcanton,descripcion from dirpersona where idpersona='" + idProf + "';");
            telefonos = base.getDatosConsulta("select tipotelefono,numerotelefono from telefono where idpersona='" + idProf + "';");
            materiasDisponibles= base.getDatosConsulta("select concat(idmateria,'-',nombremateria) from materias;");
            materiasAsignadas= base.getDatosConsulta("select concat(m.idmateria,'-',m.nombremateria) from profesores p, materias m where p.idpersona='" + idProf + "' and idmateriaasignada=m.idmateria;");
        } else {
            System.err.println("No se ha logrado establecer conexión con la base de datos");
        }
        // Desplegar la información general
        id.setText(infoGeneral[0][0]);
        nombre1.setText(infoGeneral[0][1]);
        apellido1.setText(infoGeneral[0][2]);
        apellido2.setText(infoGeneral[0][3]);
        sexo.setSelectedItem(infoGeneral[0][4]);
        
        String fec=infoGeneral[0][5];
        DateFormat format=new SimpleDateFormat("yyyy-mm-dd");
        try{
        Date fecNac= format.parse(fec);
        jXDatePicker1.setDate(fecNac);
        }catch (Exception e){
            System.err.println("No se pudo obtener la fecha de nacimiento de este estudiante");
        }
      
        email.setText(infoGeneral[0][6]);
        fb.setText(infoGeneral[0][7]);
        pwd.setText(infoGeneral[0][8]);
        
  
        //Desplegar las direcciones 
        
        String nombreColumnas[]={"Tipo","Provincia","Canton","Direccion Exacta"};
        DefaultTableModel tableModel= new DefaultTableModel(nombreColumnas,0);
        tableModel.setRowCount(0);
        tablaDirecciones.setModel(tableModel);
        for (int i = 0; i < direcciones.length; i++) {
            String[][] provincia= base.getDatosConsulta("select concat(idprovincia,'-',descripcion) from provincia where idprovincia='"+direcciones[i][1]+"';"); 
            String [][] canton=base.getDatosConsulta("select concat(idcanton,'-',descripcion) from canton where idcanton='"+direcciones[i][2]+"' and idprovincia='"+direcciones[i][1]+"';"); 
            
            tableModel.addRow(new Object[]{direcciones[i][0],provincia[0][0],canton[0][0],direcciones[i][3]});
        }
        tablaDirecciones.setModel(tableModel);
        
        //Desplegar los telefonos
        String nombreColumnasTel[]={"Tipo","Numero",};
        DefaultTableModel tableModelTel= new DefaultTableModel(nombreColumnasTel,0);
        tableModelTel.setRowCount(0);
        tablaTelefonos.setModel(tableModelTel);
        for (int i = 0; i < direcciones.length; i++) {
           
            tableModelTel.addRow(new Object[]{telefonos[i][0],telefonos[i][1]});
        }
        tablaTelefonos.setModel(tableModelTel);
        
        //Desplegar materias disponibles y materias asignadas
        DefaultListModel<String> model=new DefaultListModel<String>();
        for (int i = 0; i < materiasDisponibles.length; i++) {
            model.addElement(materiasDisponibles[i][0]);
        }
        listaMateriasDisponibles.setModel(model);

        DefaultListModel<String> model1 = new DefaultListModel<String>();
        for (int i = 0; i < materiasAsignadas.length; i++) {
            model1.addElement(materiasAsignadas[i][0]);
        }
        listaMateriasAsignadas.setModel(model1);
        
    }//GEN-LAST:event_listaProfesoresMouseClicked

    private void tablaDireccionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDireccionesMouseClicked
        // TODO add your handling code here:
        tablaDirecciones.getColumnModel().getColumn(0).setCellEditor(new DefaultCellEditor(tipoDireccion));
        tablaDirecciones.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(listaProvincias));
        tablaDirecciones.getColumnModel().getColumn(2).setCellEditor(new DefaultCellEditor(listaCantones));

    }//GEN-LAST:event_tablaDireccionesMouseClicked

    private void tablaTelefonosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTelefonosMouseClicked
        // TODO add your handling code here:
        tablaTelefonos.getColumnModel().getColumn(0).setCellEditor(new DefaultCellEditor(tiposTelefono));
    }//GEN-LAST:event_tablaTelefonosMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int error = 0;
        ConexionBase base = new ConexionBase();
        if (base.getConexionCorrecta() != -1) {
            Date fechaNacimiento;
            String fechaString;
            SimpleDateFormat formatter;
            formatter = new SimpleDateFormat("dd-MM-yyyy");
            fechaNacimiento = jXDatePicker1.getDate();
            fechaString = formatter.format(fechaNacimiento);
            int res = 0;// numero de inserts que se han hecho

            //insertar datos generales del estudiante
            try {
                res += base.actualizarEstudiante(nombre1.getText(), apellido1.getText(), apellido2.getText(), String.valueOf(sexo.getSelectedItem()), fechaString, email.getText(), fb.getText(), pwd.getText(), id.getText());
            } catch (Exception e) {
                System.err.println("Error al actualizar información general");
                error++;
            }

            //Recorrer la tabla de direcciones para agregar uno a una las direcciones la BD
            try {
                DefaultTableModel dtm = (DefaultTableModel) tablaDirecciones.getModel();
                int nRow = dtm.getRowCount();
                String codCanton;
                String codProvincia;

                String tDireccion = String.valueOf(dtm.getValueAt(0, 0));
                for (int i = 0; i < nRow; i++) {
                    if (!tDireccion.equals("null") || !tDireccion.equals("")) {
                        codProvincia = String.valueOf(dtm.getValueAt(i, 1));
                        codProvincia = codProvincia.substring(0, codProvincia.indexOf("-"));
                        codCanton = String.valueOf(dtm.getValueAt(i, 2));
                        codCanton = codCanton.substring(0, codCanton.indexOf("-"));

                        res += base.actualizarDireccion(id.getText(), String.valueOf(dtm.getValueAt(i, 0)), codProvincia, codCanton, String.valueOf(dtm.getValueAt(i, 3)));
                        try {
                            tDireccion = String.valueOf(dtm.getValueAt(i + 1, 0)); //Modificacion del ciclo
                        } catch (Exception e) {
                            System.err.println("Llego al final del ciclo");

                        }
                    }
                }
            } catch (Exception e) {
                System.err.println("No se han encontrado direcciones asociadas para actualizar");
                error++;
            }

            //Recorrer la tabla de telefonos para agregar uno a uno los telefonos
            try {
                DefaultTableModel dtm2 = (DefaultTableModel) tablaTelefonos.getModel();
                int nRow2 = dtm2.getRowCount();

                for (int j = 0; j < nRow2; j++) {
                    if (!(String.valueOf(dtm2.getValueAt(j, 0)).equals("") || String.valueOf(dtm2.getValueAt(j, 0)).equals("null"))) {

                        res += base.actualizarTelefonos(id.getText(), String.valueOf(dtm2.getValueAt(j, 0)), String.valueOf(dtm2.getValueAt(j, 1)));
                    }
                }
            } catch (Exception e) {
                System.err.println("No se han encontrado telefonos asociados para actualizar");
                error++;
            }
            
            //Actualizar las materias asignadas
            try {
                res += base.eliminarMateriasAsignadas(id.getText());
                ListModel model = listaMateriasAsignadas.getModel();
                String[] idMateriasAsig = new String[model.getSize()];
                String idMateria;
                for (int i = 0; i < model.getSize(); i++) {
                    idMateria = model.getElementAt(i).toString();
                    idMateria = idMateria.substring(0, idMateria.indexOf("-"));
                    idMateriasAsig[i] = idMateria;
                }
                res += base.insertarProfesor(id.getText(), idMateriasAsig);
            } catch (Exception e) {
                System.err.println("Error al actualizar las materias asignadas");
                error++;
            }
            

            if (error == 0) {
                JOptionPane.showMessageDialog(null, "Se actualizo el perfil del profesor", "Exito", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "No se logró actualizar correctamente el perfil", "No se agregó ", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            System.err.println("No se ha logrado establecer conexión con la base de datos");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BBuscar;
    private javax.swing.JComboBox CBBusqueda;
    private javax.swing.JTextField EBusqueda;
    private javax.swing.JTextField apellido1;
    private javax.swing.JTextField apellido2;
    private javax.swing.JTextField email;
    private javax.swing.JTextField fb;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JComboBox listaCantones;
    private javax.swing.JList listaMateriasAsignadas;
    private javax.swing.JList listaMateriasDisponibles;
    private javax.swing.JList listaProfesores;
    private javax.swing.JComboBox listaProvincias;
    private javax.swing.JTextField nombre1;
    private javax.swing.JTextField pwd;
    private javax.swing.JComboBox sexo;
    private javax.swing.JTable tablaDirecciones;
    private javax.swing.JTable tablaTelefonos;
    private javax.swing.JComboBox tipoDireccion;
    private javax.swing.JComboBox tiposTelefono;
    // End of variables declaration//GEN-END:variables
}
