/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import BaseDatos.ConexionBase;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author fugalde
 */
public class EliminarPerfil extends javax.swing.JInternalFrame {

    /**
     * Creates new form EliminarPerfil
     */
    public EliminarPerfil() {
        initComponents();
        ConexionBase base= new ConexionBase();
        String[][] personas = base.getDatosConsulta("select idpersona, nombre1, apellido1, apellido2 from persona;");
        String nombreColumnas[] = {"", "Identificación", "Nombre", "Apellido1", "Apellido2"};

        DefaultTableModel tableModel = new DefaultTableModel(null, nombreColumnas) {
            @Override
            public Class getColumnClass(int c) {
                switch (c) {
                    case 0:
                        return Boolean.class;
                    case 1:
                        return String.class;
                    case 2:
                        return String.class;
                    case 3:
                        return String.class;
                    default:
                        return String.class;
                }
            }
        };
        tableModel.setRowCount(0);
        listaPersonas.setModel(tableModel);
        try {
            for (int i = 0; i < personas.length; i++) {

                tableModel.addRow(new Object[]{false, personas[i][0], personas[i][1], personas[i][2], personas[i][3]});
            }
            listaPersonas.setModel(tableModel);
        } catch (Exception e) {
            System.err.println("No se hay perfiles creados para este tipo");
            JOptionPane.showMessageDialog(null, "No se hay perfiles creados para este tipo", "Error ", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        perfil = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaPersonas = new javax.swing.JTable();
        Eliminar = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Eliminar Perfil");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Delete.png"))); // NOI18N

        jLabel1.setText("Tipo Perfil");

        perfil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Profesor", "Estudiante", "Padre de Familia" }));

        listaPersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "", "Identificación", "Nombre", "Apellido 1", "Apellido 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(listaPersonas);
        if (listaPersonas.getColumnModel().getColumnCount() > 0) {
            listaPersonas.getColumnModel().getColumn(0).setPreferredWidth(10);
        }

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Find.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(perfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Eliminar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(perfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Eliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ConexionBase base = new ConexionBase();
        String tipoPerfil = "";
        if (perfil.getSelectedItem() == "Profesor") {
            tipoPerfil = "P";
        } else if (perfil.getSelectedItem() == "Estudiante") {
            tipoPerfil = "E";
        } else {
            tipoPerfil = "F";
        }

        String[][] personas = base.getDatosConsulta("select idpersona, nombre1, apellido1, apellido2 from persona where tipoperfil='" + tipoPerfil + "';");
        String nombreColumnas[] = {"", "Identificación", "Nombre", "Apellido1", "Apellido2"};

        DefaultTableModel tableModel = new DefaultTableModel(null, nombreColumnas) {
            @Override
            public Class getColumnClass(int c) {
                switch (c) {
                    case 0:
                        return Boolean.class;
                    case 1:
                        return String.class;
                    case 2:
                        return String.class;
                    case 3:
                        return String.class;
                    default:
                        return String.class;
                }
            }
        };
        tableModel.setRowCount(0);
        listaPersonas.setModel(tableModel);
        try {
            for (int i = 0; i < personas.length; i++) {

                tableModel.addRow(new Object[]{false, personas[i][0], personas[i][1], personas[i][2], personas[i][3]});
            }
            listaPersonas.setModel(tableModel);
        } catch (Exception e) {
            System.err.println("No se hay perfiles creados para este tipo");
            JOptionPane.showMessageDialog(null, "No se hay perfiles creados para este tipo", "Error ", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        ConexionBase base = new ConexionBase();

        //Obtener un array con los id de personas a eliminar 
        TableModel model = listaPersonas.getModel();
        int filas = model.getRowCount();

        try {
            for (int i = 0; i < filas; i++) {
                if (Boolean.valueOf(model.getValueAt(i, 0).toString())) {
                    if (perfil.getSelectedItem() == "Profesor") {
                        base.eliminarProfesor(model.getValueAt(i, 1).toString());
                    } else if (perfil.getSelectedItem() == "Estudiante") {
                        base.eliminarEstudiantes(model.getValueAt(i, 1).toString());
                    } else {
                        base.eliminarPadreFamilia(model.getValueAt(i, 1).toString());
                    }

                }
            }
            JOptionPane.showMessageDialog(null, "Se han eliminado los perfiles seleccionados", "Se agrego ", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();

        } catch (Exception e) {
            System.err.println("No se ha logrado eliminar el perfil");
            JOptionPane.showMessageDialog(null, "No se ha logrado eliminar el perfil", "Se agrego ", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_EliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton Eliminar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listaPersonas;
    private javax.swing.JComboBox perfil;
    // End of variables declaration//GEN-END:variables
}
